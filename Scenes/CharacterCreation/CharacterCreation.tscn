[gd_scene load_steps=4 format=3 uid="uid://8eke5ddqdxni"]

[ext_resource type="Script" uid="uid://dybh653qfxsrs" path="res://Scripts/CharacterCreation/CharacterCreation.gd" id="1_i3y6d"]

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_i3y6d"]
bg_color = Color(0, 0, 0, 1)
border_width_left = 1
border_width_top = 1
border_width_right = 1
border_width_bottom = 1
border_color = Color(1, 1, 1, 1)
expand_margin_left = 8.0
expand_margin_right = 8.0

[sub_resource type="GDScript" id="GDScript_i3y6d"]
script/source = "# res://Scripts/CharacterCreation/AbilityAssigning.gd
extends PanelContainer

# Order we present / persist abilities
const ABIL_ORDER := [\"STR\",\"DEX\",\"CON\",\"INT\",\"WIS\",\"CHA\"]

# Assign these 6 paths in the inspector: StrBut, DexBut, ConBut, IntBut, WisBut, ChaBut
@export var button_paths: Array[NodePath] = []

# Resolved buttons live here
var _buttons: Array[Button] = []
var _labels: Array[Label] = []

# Current values (same order as ABIL_ORDER)
var ability_values: Array[int] = []

var _selected := -1

func _ready() -> void:
	# Resolve the paths safely
	_buttons.clear()
	_labels.clear()
	for p in button_paths:
		var b := get_node_or_null(p) as Button
		if b == null:
			push_error(\"AbilityAssigning: Button not found at path: %s\" % [p])
		else:
			_buttons.append(b)
			var label: Label = null
			for child in b.get_children():
				if child is Label:
					label = child
					break
			if label == null:
				push_error(\"AbilityAssigning: Label not found under button %s\" % b.name)
			_labels.append(label)

	# Guard: we need exactly 6 buttons
	if _buttons.size() != 6:
		push_error(\"AbilityAssigning: expected 6 buttons, got %d. Check 'button_paths' in the inspector.\" % _buttons.size())
		return

	# Connect pressed handlers
	for i in _buttons.size():
		var idx := i
		# Avoid duplicate connects in case of scene reloads
		if not _buttons[i].pressed.is_connected(_on_button_pressed.bind(idx)):
			_buttons[i].pressed.connect(_on_button_pressed.bind(idx))

	_clear_selection()

func init_assigning(_gen_method: int, _point_buy_pool: int, values: Array[int]) -> void:
	# Defensive copy and populate UI
	if values.size() != 6:
		push_error(\"init_assigning: expected 6 values, got %d\" % values.size())
		return
	ability_values = values.duplicate()
	for i in _buttons.size():
		_set_button_text(i, ability_values[i])
		_set_highlight(i, false)
	_selected = -1

func _on_button_pressed(index: int) -> void:
	# First pick
	if _selected == -1:
		_selected = index
		_set_highlight(index, true)
		return

	# Same again → cancel
	if _selected == index:
		_set_highlight(index, false)
		_selected = -1
		return

	# Swap values
	var a := _selected
	var b := index
	var t := ability_values[a]
	ability_values[a] = ability_values[b]
	ability_values[b] = t

	_set_button_text(a, ability_values[a])
	_set_button_text(b, ability_values[b])

	_set_highlight(a, false)
	_selected = -1

func _set_button_text(i: int, value: int) -> void:
	# Update the button caption and its value label
	_buttons[i].text = \"%s:\" % ABIL_ORDER[i].capitalize()
	if i < _labels.size() and _labels[i] != null:
		_labels[i].text = str(value)

func _set_highlight(i: int, on: bool) -> void:
	if on:
		_buttons[i].add_theme_color_override(\"font_color\", Color(1, 0.9, 0.2)) # soft yellow
		_buttons[i].add_theme_color_override(\"font_pressed_color\", Color(1, 0.9, 0.2))
	else:
		_buttons[i].remove_theme_color_override(\"font_color\")
		_buttons[i].remove_theme_color_override(\"font_pressed_color\")

func _clear_selection() -> void:
	for i in _buttons.size():
		_set_highlight(i, false)
	_selected = -1

func get_final_values() -> Array[int]:
	return ability_values.duplicate()
"

[node name="CharacterCreation" type="Control"]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = ExtResource("1_i3y6d")

[node name="AbilityGeneration" type="PanelContainer" parent="."]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="Margins" type="MarginContainer" parent="AbilityGeneration"]
layout_mode = 2
theme_override_constants/margin_left = 16
theme_override_constants/margin_top = 16
theme_override_constants/margin_right = 16
theme_override_constants/margin_bottom = 16

[node name="VBox" type="VBoxContainer" parent="AbilityGeneration/Margins"]
layout_mode = 2

[node name="Title" type="Label" parent="AbilityGeneration/Margins/VBox"]
layout_mode = 2
theme_type_variation = &"HeaderLarge"
text = "Choose Ability Score Generation Method"
horizontal_alignment = 1

[node name="MethodOption" type="OptionButton" parent="AbilityGeneration/Margins/VBox"]
layout_mode = 2

[node name="MethodDesc" type="RichTextLabel" parent="AbilityGeneration/Margins/VBox"]
layout_mode = 2
bbcode_enabled = true
fit_content = true

[node name="Grid" type="GridContainer" parent="AbilityGeneration/Margins/VBox"]
layout_mode = 2

[node name="StrBut" type="Button" parent="AbilityGeneration/Margins/VBox/Grid"]
layout_mode = 2
text = "Str:"

[node name="StrVal" type="Label" parent="AbilityGeneration/Margins/VBox/Grid/StrBut"]
layout_mode = 0
offset_left = 37.0
offset_top = 4.0
offset_right = 73.0
offset_bottom = 27.0
text = "-"
horizontal_alignment = 1
vertical_alignment = 1

[node name="DexBut" type="Button" parent="AbilityGeneration/Margins/VBox/Grid"]
layout_mode = 2
text = "Dex:"

[node name="DexVal" type="Label" parent="AbilityGeneration/Margins/VBox/Grid/DexBut"]
layout_mode = 0
offset_left = 35.0
offset_top = 4.0
offset_right = 75.0
offset_bottom = 27.0
text = "-"
horizontal_alignment = 1
vertical_alignment = 1

[node name="ConBut" type="Button" parent="AbilityGeneration/Margins/VBox/Grid"]
layout_mode = 2
text = "Con:"

[node name="ConVal" type="Label" parent="AbilityGeneration/Margins/VBox/Grid/ConBut"]
layout_mode = 0
offset_left = 34.0
offset_top = 4.0
offset_right = 74.0
offset_bottom = 27.0
text = "-"
horizontal_alignment = 1
vertical_alignment = 1

[node name="IntBut" type="Button" parent="AbilityGeneration/Margins/VBox/Grid"]
layout_mode = 2
text = "Int:"

[node name="IntVal" type="Label" parent="AbilityGeneration/Margins/VBox/Grid/IntBut"]
layout_mode = 0
offset_left = 34.0
offset_top = 4.0
offset_right = 74.0
offset_bottom = 27.0
text = "-"
horizontal_alignment = 1
vertical_alignment = 1

[node name="WisBut" type="Button" parent="AbilityGeneration/Margins/VBox/Grid"]
layout_mode = 2
text = "Wis:"

[node name="WisVal" type="Label" parent="AbilityGeneration/Margins/VBox/Grid/WisBut"]
layout_mode = 0
offset_left = 33.0
offset_top = 4.0
offset_right = 73.0
offset_bottom = 27.0
text = "-"
horizontal_alignment = 1
vertical_alignment = 1

[node name="ChaBut" type="Button" parent="AbilityGeneration/Margins/VBox/Grid"]
layout_mode = 2
text = "Cha:"

[node name="ChaVal" type="Label" parent="AbilityGeneration/Margins/VBox/Grid/ChaBut"]
layout_mode = 0
offset_left = 33.0
offset_top = 4.0
offset_right = 73.0
offset_bottom = 27.0
text = "-"
horizontal_alignment = 1
vertical_alignment = 1

[node name="Tooltip" type="PanelContainer" parent="AbilityGeneration/Margins/VBox"]
visible = false
layout_mode = 2
theme_override_styles/panel = SubResource("StyleBoxFlat_i3y6d")

[node name="MarginContainer" type="MarginContainer" parent="AbilityGeneration/Margins/VBox/Tooltip"]
layout_mode = 2

[node name="Label" type="Label" parent="AbilityGeneration/Margins/VBox/Tooltip/MarginContainer"]
layout_mode = 2

[node name="RollRow" type="HBoxContainer" parent="AbilityGeneration/Margins/VBox"]
layout_mode = 2

[node name="TotalLabel" type="Label" parent="AbilityGeneration/Margins/VBox/RollRow"]
layout_mode = 2
text = "Total: -"

[node name="StoreRow" type="HBoxContainer" parent="AbilityGeneration/Margins/VBox"]
layout_mode = 2

[node name="StoreButton" type="Button" parent="AbilityGeneration/Margins/VBox/StoreRow"]
layout_mode = 2
text = "Store"

[node name="RerollButton" type="Button" parent="AbilityGeneration/Margins/VBox/StoreRow"]
layout_mode = 2
text = "Roll"

[node name="RevertButton" type="Button" parent="AbilityGeneration/Margins/VBox/StoreRow"]
layout_mode = 2
text = "Revert"

[node name="Spacer" type="Control" parent="AbilityGeneration/Margins/VBox/StoreRow"]
layout_mode = 2
size_flags_horizontal = 3

[node name="StoredLabel" type="Label" parent="AbilityGeneration/Margins/VBox/StoreRow"]
layout_mode = 2
theme_type_variation = &"HeaderLarge"
text = "Stored: -"
horizontal_alignment = 1

[node name="NavButtons" type="HBoxContainer" parent="AbilityGeneration/Margins/VBox"]
layout_mode = 2

[node name="BackButton" type="Button" parent="AbilityGeneration/Margins/VBox/NavButtons"]
layout_mode = 2
disabled = true
text = "Back"

[node name="NextButton" type="Button" parent="AbilityGeneration/Margins/VBox/NavButtons"]
layout_mode = 2
text = "Next →"

[node name="AbilityAssigning" type="PanelContainer" parent="."]
visible = false
layout_mode = 0
offset_right = 40.0
offset_bottom = 40.0
script = SubResource("GDScript_i3y6d")
button_paths = Array[NodePath]([NodePath("../AbilityGeneration/Margins/VBox/Grid/StrBut"), NodePath("../AbilityGeneration/Margins/VBox/Grid/DexBut"), NodePath("../AbilityGeneration/Margins/VBox/Grid/ConBut"), NodePath("../AbilityGeneration/Margins/VBox/Grid/IntBut"), NodePath("../AbilityGeneration/Margins/VBox/Grid/WisBut"), NodePath("../AbilityGeneration/Margins/VBox/Grid/ChaBut")])

[node name="RaceChoose" type="PanelContainer" parent="."]
visible = false
layout_mode = 0
offset_right = 40.0
offset_bottom = 40.0

[node name="ClassChoose" type="PanelContainer" parent="."]
visible = false
layout_mode = 0
offset_right = 40.0
offset_bottom = 40.0

[node name="FinalizeCharacter" type="PanelContainer" parent="."]
visible = false
layout_mode = 0
offset_right = 40.0
offset_bottom = 40.0
